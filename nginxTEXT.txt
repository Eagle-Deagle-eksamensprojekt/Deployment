user nginx;
events {
    worker_connections 1024;  # Max connections per worker
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Dynamisk load balancing til bid-services
    upstream bid-services {
        # Brug Docker service discovery til dynamisk at finde instanser
        server bid-service:80;  # "bid-service" er navnet på din service i Docker Compose
    }

    server {
        listen 4000;

        # Route til ruter, der ikke kræver itemId (som /Bid/start-listener)
        location /bid/start-listener {
            proxy_pass http://bid-service;
            proxy_set_header Host $host;

            # Logging
            access_log /var/log/nginx/bid_service_access.log;
            error_log /var/log/nginx/bid_service_error.log debug;
        }

        # Dynamisk rute til BidService instanser baseret på itemId
        location ~ ^/bid {
            # Dynamisk opretter URL med itemId fra forespørgslen
            set $item_id $arg_itemId;
            proxy_pass http://bid-service;
            proxy_set_header Host $host;
            proxy_set_header X-Item-ID $item_id;  # Tilføj itemId som header til bid services

            # Logging
            access_log /var/log/nginx/bid_service_access.log;
            error_log /var/log/nginx/bid_service_error.log debug;
        }

        # Fallback routes
        location /auction {
            proxy_pass http://auction-service:5005;
            proxy_set_header Host $host;
        }

        location /item {
            proxy_pass http://item-service:5001;
            proxy_set_header Host $host;
        }

        location /user {
            proxy_pass http://user-service:5002;
            proxy_set_header Host $host;
        }

        location /auth {
            proxy_pass http://auth-service:5003;
            proxy_set_header Host $host;
        }

        # Default route - for undefined locations
        location / {
            return 404;
        }
    }
}
